------------------------
Задача 6.1
------------------------
Дано:
HTML страница в которой есть только такой код
<div>
    <input id="todo-input" value="Placeholder" /> <button id="button-add">Add</button>
    <p>ToDo List:</p>
    <ol id="todo-list">
        <li class="todo-item">
            First todo
            <span class="delete-button" onclick="removeItem(event)" title="Delete current item">x</span>
        </li>
    </ol>
</div>

Написать JavaScript код, который:
1. Найдет todo-input и получит значение введенное в поле
2. Найдет элемент li
3. Создаст deep клон элемента li
4. Поменять только текст у клона элемента li


------------------------
Задача 6.2
------------------------
Дано:
HTML страница в которой есть только такой код

<div id="test" style="height: 50px;background-color: lightblue;">Test Div</div>
<p>Расчетные стили для test div: <br><span id="output"></span></p>

<script>
function myFunction(){
    var elem = document.getElementById("test");
    var txt;
    cssObj = window.getComputedStyle(elem)

    for (i = 0; i < cssObj.length; i++) {
        cssObjProp = cssObj.item(i)
        txt += cssObjProp + " = " + cssObj.getPropertyValue(cssObjProp) + "<br>";
    }
    document.getElementById("output").innerHTML = txt;
}
</script>


Вопрос:
Как получить расчетный стиль для фонового цвета у дива с id="test"?


------------------------
Задача 6.3
------------------------

Создать UIComponent ES6 Class


Конструктор класса принимает - имя єлемента (имя тега) и сохраняет его в поле класса

(можно добавить параметрьі - атрибутьі и контент)
Добавить методьі:
 - setAttribute() -  добавляет в поле (массив) attributes обьект типа {name: 'id', value: 1}
 - setContent() - добавляет в поле content текстовьій контент (строку)

Метод render(parent) - принимает HTML єлемент в которьій вьіводит созданньій єлемент
(єлемент нужно создать используя имя єлемента, атрибутьі  и текстовьій контент).


Создать класс Button которьій расширяет класс UIComponent и добавляет Метод

clickMe() {
  console.log("I'm clicked")
}

-------------
Для тестирования классов:
создать єкземпляр класса  Button и вьізвать у него методьі render и clickMe